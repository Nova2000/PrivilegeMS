
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>用户</title>
    <script src="~/Scripts/vue.min.js"></script>
    <!-- 最新版本的 Bootstrap 核心 CSS 文件 -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/animate.css@3.7.0/animate.min.css">
    <script src="~/Scripts/axios.min.js"></script>
    <link href="~/CSS/css.css" rel="stylesheet" />
</head>
<body>
    <div class="container-fluid" id="user">
        <!--用户信息展示-->
        <div class="col-lg-6 animated fadeIn" v-show="userListPanelShowFlag">
            <div id="userList">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3>用户信息</h3>
                    </div>
                    <div class="panel-body">
                        <table class="table  table-hover table-bordered">
                            <thead>
                                <tr class="info">
                                    <th>序号</th>
                                    <th>姓名</th>
                                    <th>账号</th>
                                    <th>密码</th>
                                    <th>注册时间</th>
                                    @*<th>修改时间</th>*@
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <!-- :class="{'trs':i%2==0}" -->
                            <tbody>
                                <tr v-for="(item,i) in userListData" :key="i" :class="{'trs':i%2==0}">
                                    <td v-text="item.ID"></td>
                                    <td v-text="item.Name"></td>
                                    <td v-text="item.AccountNum">123456789</td>
                                    <td v-text="item.Pwd">123456789</td>
                                    <td>{{item.SubTime | timeFormat('en')}}</td>
                                    @*<td>{{item.ModifiedTime | timeFormat('en')}}</td>*@
                                    <td>
                                        <a class="btn btn-default btn-sm" v-on:click="editpanelOpen(item.Name)" v-show="editBtnFlag">修改</a>
                                        <a class="btn btn-info btn-sm" v-on:click="actionpanelOpen(i)" v-show="actionBtnFlag">权限</a>
                                        <a class="btn btn-success btn-sm" v-on:click="rolepanelOpen(i)" v-show="roleBtnFlag">角色</a>
                                        <a class=" btn btn-danger btn-sm" v-on:click="deluser(i,item.ID)" v-show="deleteBtnFlag">删除</a>

                                    </td>
                                </tr>
                            </tbody>

                        </table>
                        @*<ul class="pagination">
                            <li><a href="#">&laquo;</a></li>
                            <li><a href="#">1</a></li>
                        </ul>*@
                    </div>
                </div>
            </div>
        </div>
        <!--添加用户-->
        <div class="col-lg-6 animated fadeIn" v-show="addUserPanelShowFlag">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3>添加用户</h3>
                </div>
                <div class="panel-body">
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">姓名</span>
                        <input type="text" class="form-control" placeholder="请输入用户名" aria-describedby="basic-addon1" v-model="name">
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">账户</span>
                        <input type="text" class="form-control" placeholder="9位数字账户" aria-describedby="basic-addon1" v-model="accountNum">
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">密码</span>
                        <input type="password" class="form-control" placeholder="请输入密码" aria-describedby="basic-addon1" v-model="pwd" v-on:keyup.enter="adduser">
                    </div>
                    <button class="btn btn-success btn-block" v-on:click="adduser">提交</button>
                </div>
            </div>
        </div>
        <!--修改用户-->
        <div class="col-lg-6 animated fadeIn" v-show="editUserPanelShowFlag">
            <div class="panel panel-warning">
                <div class="panel-heading">
                    <h3>修改用户</h3>
                </div>
                <div class="panel-body">
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">账户</span>
                        <input type="text" class="form-control" placeholder="请输入用户名" aria-describedby="basic-addon1" v-model="Student.useraccountNum" readonly>
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">姓名</span>
                        <input type="text" class="form-control" placeholder="请输入用户名" aria-describedby="basic-addon1" v-model="Student.editname">
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">密码</span>
                        <input type="text" class="form-control" placeholder="请输入密码" aria-describedby="basic-addon1" v-model="Student.editpwd" v-on:keyup.enter="">
                    </div>
                    <button class="btn btn-default pull-left" v-on:click="editpanelClose">关闭</button>
                    <button class="btn btn-success pull-right" v-on:click="edituser">提交</button>
                </div>
            </div>
        </div>
        <!--用户角色-->
        <div class="col-lg-10 col-lg-offset-1 animated fadeIn " v-show="userRolePanelShowFlag">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3>用户角色</h3>
                    <div class="container">
                        <div class="col-lg-3"><strong>账号：</strong>{{userRoleModel.useraccountNum}}</div>
                        <div class="col-lg-3"><strong>用户名：</strong>{{userRoleModel["name"]}}</div>
                        @*<div class="col-lg-3"><strong>注册时间：</strong>{{userRoleModel.subTime | timeFormat('en')}}</div>*@

                    </div>
                </div>
                <div class="panel-body">
                    <table class="table  table-hover table-bordered">
                        <caption class="text-center"><h4>已分配角色</h4></caption>
                        <thead>
                            <tr class="info">
                                <th>序号</th>
                                <th>名称</th>
                                <th>创建时间</th>
                                <th>权重</th>
                                <th>简介</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item,i) in roleListData" :key="i">
                                <td v-text="item.ID">序号</td>
                                <td v-text="item.Name">名称</td>
                                <td>{{item.SubTime | timeFormat('en')}}</td>
                                <td v-text="item.Sort">简介</td>
                                <td v-text="item.Remark">权重</td>
                                <td>
                                    <a class=" btn btn-danger btn-sm" v-on:click="delRole(i)">禁用</a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <table class="table  table-hover table-bordered">
                        <caption class="text-center"><h4>未分配角色</h4></caption>
                        <thead>
                            <tr class="info">
                                <th>序号</th>
                                <th>名称</th>
                                <th>创建时间</th>
                                <th>权重</th>
                                <th>简介</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item,i) in noRoleListData" :key="i" :class="{'trs':i%2==0}">
                                <td v-text="item.ID">序号</td>
                                <td v-text="item.Name">名称</td>
                                <td>{{item.SubTime | timeFormat('en')}}</td>
                                <td v-text="item.Sort">简介</td>
                                <td v-text="item.Remark">权重</td>
                                <td>
                                    <a class=" btn btn-success btn-sm" v-on:click="addRole(i)">启用</a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="col-lg-4 pull-left">
                        <button class="btn btn-default btn-block " v-on:click="rolepanelClose">取消</button>
                    </div>
                    <div class="col-lg-4 pull-right">
                        <button class="btn btn-success btn-block" v-on:click="userRolePost">提交</button>
                    </div>
                </div>
            </div>
        </div>
        <!--用户权限-->
        <div class="col-lg-10 col-lg-offset-1 animated fadeIn " v-show="userActionPanelShowFlag">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3>用户信息</h3>
                    <div class="container">
                        <div class="col-lg-3"><strong>ID：</strong>{{userRoleModel.id}}</div>
                        <div class="col-lg-3"><strong>账户：</strong>{{userRoleModel.useraccountNum}}</div>
                        <div class="col-lg-3"><strong>用户名：</strong>{{userRoleModel["name"]}}</div>
                        <div class="col-lg-1 ">
                            <button class="btn btn-default btn-block " v-on:click="actionpanelClose">X</button>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <!--单独拥有权限-->
                    <table class="table  table-hover table-bordered">
                        <caption class="text-center"><h4>单独拥有权限</h4></caption>
                        <thead>
                            <tr class="info">
                                <th>序号</th>
                                <th>名称</th>
                                <th>创建时间</th>
                                <th>URL</th>
                                <th>请求方式</th>
                                <th>属性</th>
                                <th>简介</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item,i) in actionListData" :key="i" class="text-center">
                                <td v-text="item.ID"></td>
                                <td v-text="item.Name"></td>
                                <td>{{item.SubTime | timeFormat('en')}}</td>
                                <td v-text="item.Url" class="text-left"></td>
                                <td v-text="item.HttpMethod"></td>
                                <td v-text="item.ActionType==0?'非菜单权限':'菜单权限'"></td>
                                <td v-text="item.Remark">简介</td>
                                <td>
                                    <a class=" btn btn-danger btn-sm" v-on:click="prohibitUserAction(item.ID)">禁用</a>
                                    <a class=" btn btn-warning btn-sm" v-on:click="delUserAction(item.ID)">清理</a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <!--禁用权限-->
                    <table class="table  table-hover table-bordered">
                        <caption class="text-center"><h4>禁用权限</h4></caption>
                        <thead>
                            <tr class="info">
                                <th>序号</th>
                                <th>名称</th>
                                <th>创建时间</th>
                                <th>URL</th>
                                <th>请求方式</th>
                                <th>属性</th>
                                <th>简介</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item,i) in porhibitActionListData" :key="i" :class="{'trs':i%2==0}">
                                <td v-text="item.ID"></td>
                                <td v-text="item.Name"></td>
                                <td>{{item.SubTime | timeFormat('en')}}</td>
                                <td v-text="item.Url" class="text-left"></td>
                                <td v-text="item.HttpMethod"></td>
                                <td v-text="item.ActionType==0?'非菜单权限':'菜单权限'"></td>
                                <td v-text="item.Remark">简介</td>
                                <td>
                                    <a class=" btn btn-success btn-sm" v-on:click="addUserAction(item.ID)">启用</a>
                                    <a class=" btn btn-warning btn-sm" v-on:click="delUserAction(item.ID)">清理</a>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                </div>
               <!--所有权限-->
                <table class="table  table-hover table-bordered">
                    <caption class="text-center"><h4>所有权限</h4></caption>
                    <thead>
                        <tr class="info">
                            <th>序号</th>
                            <th>名称</th>
                            <th>创建时间</th>
                            <th>URL</th>
                            <th>请求方式</th>
                            <th>属性</th>
                            <th>简介</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(item,i) in allActionListData" :key="i" class="text-center">
                            <td v-text="item.ID"></td>
                            <td v-text="item.Name"></td>
                            <td>{{item.SubTime | timeFormat('en')}}</td>
                            <td v-text="item.Url" class="text-left"></td>
                            <td v-text="item.HttpMethod"></td>
                            <td v-text="item.ActionType==0?'非菜单权限':'菜单权限'"></td>
                            <td v-text="item.Remark">简介</td>
                            <td>
                                <a class=" btn btn-success btn-sm" v-on:click="addUserAction(item.ID)">启用</a>
                                <a class=" btn btn-danger btn-sm" v-on:click="prohibitUserAction(item.ID)">禁用</a>

                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

    </div>
    <a class="btn btn-default btn-block" href="/home/index"> 返回首页</a>
    
</body>
<script>
    var user = new Vue({
        el: "#user",
        data: {
            //权限
            userListPanelShowFlag: true,
            editUserPanelShowFlag: false,
            addUserPanelShowFlag: true,
            userRolePanelShowFlag: false,
            userActionPanelShowFlag: false,
            deleteBtnFlag: true,
            editBtnFlag: true,
            roleBtnFlag: true,
            actionBtnFlag: true,

            //获取userList
            userListApiUrl: '/User/UserList',
            userListData: [],
            //添加user
            addUserApiUrl: '/User/AddUser',
            name: '',
            accountNum: '',
            pwd: '',
            //删除用户
            deleteApiUrl: "/User/DeleteUser",
            //修改用户
            editUserApiUrl: '/User/EditUser',
            Student: [
                { editname: '', userID: "", editpwd: "", useraccountNum: "" }
            ],
            //用户角色
            userRoleModel: [{
                id:"",
                name: "",
                useraccountNum: "",
                subTime:''
            }],
            //用户角色列表
            roleListApi:'/User/GetUsetRoleList',
            roleListData: [],
            noRoleListApi: '/User/GetUsetOutsideRoleList',
            noRoleListData: [],
            userRolePostApi:'/User/EditUserRole',
            //权限列表
            actionListApi:'/User/UserAction',
            actionListData: [],
            porhibitActionLsitApi:'/User/UserPorhibitAction',
            porhibitActionListData: [],
            allActionListApi: '/User/GetUserWithoutAction',
            allActionListData: [],
            //权限操作
            editUserActionApi: '/User/EditUserAction',
            delUserActionApi:'/User/DelUserAction'
        },
        methods: {
            //获取用户列表
            getUserListData: function () {
                //this.$http.get(this.apiUrl).then(function (res) {
                //    this.userListData = res.body;
                //})
                axios.get(this.userListApiUrl).then(function (res) {
                    user.userListData = res.data;
                })
            },
            //添加用户
            adduser: function () {
                if (this.accountNum.length == 9 && this.pwd.length > 0 && this.name.length > 0) {
                    axios.post(this.addUserApiUrl, {
                        name: this.name,
                        accountNum: this.accountNum,
                        pwd: this.pwd
                    }).then(function (respose) {
                        if (respose.data == "ok") {
                            user.accountNum = user.pwd = user.name = '';
                            user.getUserListData();

                        } else {
                            alert("添加失败")
                        }
                    })
                } else {
                    alert("输入信息不合法");
                }

            },
            //删除用户
            deluser: function (i, itemId) {
                //alert(id);
                var flag = confirm("确认删除序号为 " + (i + 1) + " 的记录吗？")
                if (flag) {
                    axios.post(this.deleteApiUrl, {
                        id: itemId
                    }).then(function (respose) {
                        if (respose.data == 'ok') {
                            user.getUserListData();

                        } else {
                            alert("删除失败")
                        }
                    })
                }
            },
            //打开修改面板
            editpanelOpen: function (userID) {
                if (!this.editUserPanelShowFlag) {
                    this.editUserPanelShowFlag = true;
                    var stu = this.userListData.filter(item => {
                        if (item.Name.includes(userID)) {
                            return true;
                        }
                    })
                    this.Student.userID = stu["0"].ID;
                    this.Student.editname = stu["0"].Name;
                    this.Student.useraccountNum = stu["0"].AccountNum;
                    this.Student.editpwd = stu["0"].Pwd;
                } else {
                    alert("请修改或关闭当前用户数据!");
                }
            },
            //关闭修改用户面板
            editpanelClose: function () {
                this.editUserPanelShowFlag = false;
                this.Student = [
                    { editname: '', userID: "", editpwd: "", useraccountNum: "" }
                ];
            },
            //修改用户
            edituser: function () {
                if (this.Student.editname != "" && this.Student.userID != "" && this.Student.editpwd != "" && this.Student.useraccountNum != "") {
                    axios.post(this.editUserApiUrl, {
                        id: this.Student.userID,
                        name: this.Student.editname,
                        pwd: this.Student.editpwd
                    }).then(respose => {
                        if (respose.data == "ok") {
                            alert("修改成功！");
                            user.editpanelClose();
                            user.getUserListData();

                        } else {
                            alert("修改失败")
                        }
                    });
                } else {
                    alert("请检查输入信息是否完整！")
                }
            },
            //打开角色面板
            rolepanelOpen: function (i) {
                this.userRoleModel.id = this.userListData[i].ID;
                this.userRoleModel.name = this.userListData[i].Name;
                this.userRoleModel.useraccountNum = this.userListData[i].AccountNum;
                this.userRoleModel.subTime = this.userListData[i].SubTime;
                //console.log(this.userRoleModel)
                this.userListPanelShowFlag = this.addUserPanelShowFlag = false;
                this.userRolePanelShowFlag = true;
                axios.post(this.roleListApi, {
                    id: this.userRoleModel.id
                }).then(res => {
                    if (res.data != 'no') {
                        user.roleListData = res.data;
                    } else {
                        alert("查无此人");
                    }
                    });
                axios.post(this.noRoleListApi, {
                    id: this.userRoleModel.id
                }).then(res => {
                    if (res.data != 'no') {
                        user.noRoleListData = res.data;
                    } else {
                        alert("查无此人");
                    }
                })

            },
            //关闭角色面板
            rolepanelClose: function () {
                this.userListPanelShowFlag = this.addUserPanelShowFlag = true;
                this.userRolePanelShowFlag = false;
                this.userRoleModel = [{
                    id: "",
                    name: "",
                    useraccountNum: "",
                    subTime: ''
                }];
            },
            //添加角色
            addRole: function (i) {
                var roleinfo = this.noRoleListData[i];
                this.roleListData.push(roleinfo);
                this.noRoleListData.splice(i, 1);
            },
            //删除角色
            delRole: function (i) {
                var roleinfo = this.roleListData[i];
                this.noRoleListData.push(roleinfo);
                this.roleListData.splice(i, 1);
            },
            //提交角色修改记录
            userRolePost: function () {
                var roleIdList = [];
                for (var i = 0; i < this.roleListData.length; i++) {
                    roleIdList.push(this.roleListData[i].ID);
                }
                roleIdList = JSON.stringify(roleIdList);
                console.log(roleIdList + "-----" + this.userRoleModel.id);
                axios.post(this.userRolePostApi, {
                    idList: roleIdList,
                    id: this.userRoleModel.id
                }).then(res => {
                    if (res.data != "no") {
                        alert("修改成功");
                    } else {
                        alert("修改失败")
                    }
                    })
                this.rolepanelClose();
            },

            //
            //获取用户权限
            //

            //获取已有权限
            getUserActionData: function (ID) {
                axios.post(this.actionListApi, {
                    id: ID
                }).then(res => {
                    user.actionListData = res.data;
                })
            },
            //获取所有权限
            getAllActionData: function (ID) {
                axios.post(this.allActionListApi, {
                    id:ID
                }).then(res => {
                    if (res.data != "no") {
                        user.allActionListData = res.data;
                    } else {
                        alert("查询出错")
                    }
                });
            },
            //获取禁用权限
            getUserPorhibitActionData: function (ID) {
                axios.post(this.porhibitActionLsitApi, {
                    id: ID
                }).then(res => {
                    user.porhibitActionListData = res.data;
                })
            },
            //打开权限面板
            actionpanelOpen: function (i) {
                this.userRoleModel.id = this.userListData[i].ID;
                this.userRoleModel.name = this.userListData[i].Name;
                this.userRoleModel.useraccountNum = this.userListData[i].AccountNum;
                this.userRoleModel.subTime = this.userListData[i].SubTime;
                this.userActionPanelShowFlag = true;
                this.userListPanelShowFlag = this.addUserPanelShowFlag = false;
                //console.log(this.userRoleModel)
                this.getAllActionData(this.userRoleModel.id);
                this.getUserActionData(this.userRoleModel.id);
                this.getUserPorhibitActionData(this.userRoleModel.id);
            },
            //关闭权限面板
            actionpanelClose: function () {
                this.userRoleModel = [{
                    id: "",
                    name: "",
                    useraccountNum: "",
                    subTime: ''
                }];
                this.userActionPanelShowFlag = false;
                this.userListPanelShowFlag = this.addUserPanelShowFlag = true;
                //console.log(this.userRoleModel)
            },
            //添加权限
            addUserAction: function (ID) {                                
                axios.post(this.editUserActionApi, {
                    userID: this.userRoleModel.id,
                    actionID: ID,
                    isPass: true
                }).then(res => {
                    user.getUserActionData(this.userRoleModel.id);
                    user.getUserPorhibitActionData(this.userRoleModel.id);
                    user.getAllActionData(this.userRoleModel.id)
                    alert(res.data)
                });
               
            },
            //禁用权限
            prohibitUserAction: function (ID) {
                axios.post(this.editUserActionApi, {
                    userID: this.userRoleModel.id,
                    actionID: ID,
                    isPass: false
                }).then(res => {
                    user.getUserActionData(this.userRoleModel.id);
                    user.getUserPorhibitActionData(this.userRoleModel.id);
                    user.getAllActionData(this.userRoleModel.id);
                    alert(res.data)
                    });
               
            },
            //清理权限
            delUserAction: function (ID) {
                axios.post(this.delUserActionApi, {
                    userID: this.userRoleModel.id,
                    actionID: ID,
                }).then(res => {
                    user.getUserActionData(this.userRoleModel.id);
                    user.getUserPorhibitActionData(this.userRoleModel.id);
                    user.getAllActionData(this.userRoleModel.id);
                    alert(res.data);
                })
            }
        },

        created() {
            this.getUserListData();
        },
        filters: {
            timeFormat: function (dateStr, pattern) {
                try {
                    var t = dateStr.slice(6, 19)
                    var date = new Date(parseInt(t));
                    var year = date.getFullYear();
                    var month = date.getMonth() + 1;
                    var day = date.getDate();
                    var result = '';
                    if (pattern) {
                        switch (pattern.toLowerCase()) {
                            case 'cn':
                                result = year + '年' + month + '月' + day + '日';
                                break;
                            case 'en':
                                result = year + '-' + month + '-' + day;
                                break;
                            default:
                                result = year + '.' + month + '.' + day;
                                break;
                        }
                    } else {
                        result = year + '.' + month + '.' + day;
                    }
                } catch (e) {
                    result="null"
                }
                return result;
            }
        }
    })

</script>
</html>

